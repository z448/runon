#!/usr/bin/env perl

use 5.010;
use warnings;
use strict;

use List::MoreUtils qw< uniq >;
use Term::ANSIColor;
use Data::Dumper;
use JSON::PP;
use open qw<:encoding(UTF-8)>;

# for verbose output change RUNON_DEBUG to 1;
$ENV{RUNON_DEBUG} = 1;
my $config = read_config('.runon');
my %max_len = %{ max_len() };
#my $config = read_config('.apps.json');
 

sub read_config {
    my $path = shift;
    local $/;
    open(my $fh,"<", $path) || die "cant open $path: $!";
    my $json = <$fh>;
    my $p = decode_json $json;
}

sub max_len {
    my (@environment, @region, @hostname, %max_len) = ();

    for(@$config){ 
        push @environment, $_->{environment};
        push @hostname, $_->{hostname};
        push @region, $_->{region};
    }
    my $test = length join('', uniq @environment);
    say $test;
    $max_len{environment} = length( join('', uniq @environment) );
    $max_len{region} = length( join('', uniq @region) );
    $max_len{hostname} = length( join('', uniq @hostname) );
    \%max_len;
}



sub filter {
    my $keyword = shift;
    my $keylength = length $keyword;
    my @filtered = ();
    my %filter = ();


    say length join('', my @region_length = grep { $_->{environment} } @$config);

    die "min 3 characters required" if $keylength <= 2;
    if($keylength >= 3){
        say "keyword: " . substr( $keyword, 0, 3) if $ENV{RUNON_DEBUG};
        @filtered = grep { substr($_->{application}, 0, 3) eq substr( $keyword, 0, 3) } @$config;
    } 
    if($keylength >= 4){
        say "keyword: " . substr($keyword, 3, 1) if $ENV{RUNON_DEBUG};
        @filtered = grep { substr( $_->{region}, 0, 1 ) eq substr($keyword, 3, 1) } @filtered;
    }
    if($keylength >= 5){
        say "keyword: " . substr( $keyword, 4, 1) if $ENV{RUNON_DEBUG};
        @filtered = grep { substr( $_->{environment}, 0, 1 ) eq substr( $keyword, 4, 1) } @filtered;
    }
    return \@filtered, $keylength;
}

sub array_length {
        return length join('', @{$_[0]});
}



sub relay {
    my $keyword = shift;
    my( @region, @environment, @host ) = ();
    my( $results, $keylength )  = filter($keyword);

    for(@$results){
        push @region, $_->{region};
        push @environment, $_->{environment};
        push @host, $_->{hostname};
    }

    say "keylength: $keylength";
    if($keylength == 3){
        print colored(['white on_blue'], $keyword); print colored(['blue on_white'],join(' - ',@region)); print 'x'x($max_len{environment} - array_length(\@environment)); print colored(['white on_blue'],@environment); print colored(['white on_blue'],'|'); print colored(['white on_blue'],@host); print "\n";
        print array_length(\@region);
    } 
    elsif($keylength == 4){
        print colored(['white on_blue'], join(' - ', @region)); print ' '; print @environment; print ' '; print @host; print "\n";
    }

}

relay("$ARGV[0]");

